[{"/home/guilherme/Documentos/projetos/testzappts/src/pages/slider/index.jsx":"1","/home/guilherme/Documentos/projetos/testzappts/src/index.js":"2","/home/guilherme/Documentos/projetos/testzappts/src/pages/signin/index.jsx":"3","/home/guilherme/Documentos/projetos/testzappts/src/routes.jsx":"4","/home/guilherme/Documentos/projetos/testzappts/src/pages/signup/index.jsx":"5","/home/guilherme/Documentos/projetos/testzappts/src/App.js":"6","/home/guilherme/Documentos/projetos/testzappts/src/components/Inputs/index.jsx":"7"},{"size":690,"mtime":1609450396145,"results":"8","hashOfConfig":"9"},{"size":235,"mtime":1609439932304,"results":"10","hashOfConfig":"9"},{"size":2097,"mtime":1609451932178,"results":"11","hashOfConfig":"9"},{"size":1054,"mtime":1609451924457,"results":"12","hashOfConfig":"9"},{"size":2688,"mtime":1609452682001,"results":"13","hashOfConfig":"9"},{"size":130,"mtime":1609437021308,"results":"14","hashOfConfig":"9"},{"size":316,"mtime":1609443547921,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o6mo1r",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/guilherme/Documentos/projetos/testzappts/src/pages/slider/index.jsx",[],"/home/guilherme/Documentos/projetos/testzappts/src/index.js",[],["34","35"],"/home/guilherme/Documentos/projetos/testzappts/src/pages/signin/index.jsx",["36","37"],"import React,{ useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Slider from '../slider';\nimport Input from '../../components/Inputs'\n\nimport GoogleImg from '../../assets/images/google.png'\n\nimport './styles.css';\n\nfunction Signin(){\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n\n    return(\n        <div className=\"container\">\n            <Slider />\n            <div className=\"signInMain\">\n                <h2 className=\"title\" >Invision</h2>\n                <h4 className=\"subtitle\" >Welcome to Invision</h4>\n                \n                <form className=\"form\">\n                    <Input \n                        label=\"Users name or Email\" \n                        name=\"email\" \n                        type='email' \n                        placeholder=\"email\" \n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Input \n                        label=\"Password\" \n                        name=\"password\" \n                        type='password' \n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <a className=\"forgot\">Forgot password?</a>\n                </form>       \n\n\n                <button className=\"signInBtn\">Sign In</button>\n\n                <div className=\"divider\">\n                    <hr style={{width: '40%'}}></hr>\n                    <p>Or</p>\n                    <hr style={{width: '40%'}}></hr>\n                </div>\n\n                <button className=\"googleBtn\">\n                    <img className=\"imgG\" src={GoogleImg} />\n                    Sign in with Google\n                </button>\n\n                <div className=\"footer\">\n                    <div>New <strong>Invision</strong>?</div>\n                    <Link to=\"/sign-up\">\n                        Create Account\n                    </Link>\n                </div>\n\n            </div>          \n        </div>\n    )\n}\n\nexport default Signin;","/home/guilherme/Documentos/projetos/testzappts/src/routes.jsx",[],"/home/guilherme/Documentos/projetos/testzappts/src/pages/signup/index.jsx",["38","39"],"/home/guilherme/Documentos/projetos/testzappts/src/App.js",[],["40","41"],"/home/guilherme/Documentos/projetos/testzappts/src/components/Inputs/index.jsx",["42"],"import React, { InputHTMLAttributes } from \"react\";\n\nimport \"./styles.css\";\n\nfunction Input({name, label, ...rest}){\n    return (\n        <div className=\"input-block\">\n          <label htmlFor={name}>{label}</label>\n          <input type=\"text\" id={name} {...rest} />\n        </div>\n      );\n}\n\nexport default Input;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":38,"column":21,"nodeType":"49","endLine":38,"endColumn":43},{"ruleId":"50","severity":1,"message":"51","line":51,"column":21,"nodeType":"49","endLine":51,"endColumn":61},{"ruleId":"47","severity":1,"message":"48","line":64,"column":25,"nodeType":"49","endLine":64,"endColumn":28},{"ruleId":"47","severity":1,"message":"48","line":66,"column":25,"nodeType":"49","endLine":66,"endColumn":28},{"ruleId":"43","replacedBy":"52"},{"ruleId":"45","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["58"],["59"],"no-unused-vars","'InputHTMLAttributes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]